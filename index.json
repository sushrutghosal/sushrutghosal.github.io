
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"üöÄ Summary (Who I am): Seasoned engineer üõ†Ô∏è | Machine Learning engineer üß† | Leader üåü\nI am a Master of Science in Computer Science student at the Arizona State University (ASU). My research interests primarily revolve around Natural Language Processing and Artificial Intelligence Safety. In addition, I possess expertise in MLOps and have a proven track record of successfully implementing end-to-end ML pipelines, encompassing the entire journey from data preprocessing to production deployment at scale.\nCurrently, I hold the following positions:\nMachine Learning Intern at the Intel Corporation (remote). In this role, I am actively involved in developing intelligent solutions aimed at optimizing patching procedures for Linux machines within the Engineering Compute‚Äôs cloud offering. Graduate Teaching Assistant for the Spring 2024 offering of CSCI-585:Database Systems under the guidance of Prof. Saty Raghavachary. This role enables me to pursue my passion for teaching and contribute to enhancing the knowledge base of fellow students. Prior to joining USC, I gained valuable industry experience as a Software Engineer at both Amazon Inc. and Motorola Mobility . During my tenure, I honed my skills in developing scalable software solutions, as well as developing AI systems for industrial applications. These experiences in the industry inspired me to pursue a master‚Äôs degree specializing in AI, as I am passionate about understanding the principles behind the systems that govern major technological innovations in the modern world.\nPrior to that, I earned my Bachelor of Engineering in Computer Science and Engineering from SJCE Mysore, where I was ranked third in the department for my outstanding performance.\nDownload my resum√© .\n","date":1703537568,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1703537568,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"üöÄ Summary (Who I am): Seasoned engineer üõ†Ô∏è | Machine Learning scientist üß† | Leader üåü\nI am a Master of Science in Computer Science student at the University of Southern California (USC).","tags":null,"title":"Shashank Rangarajan","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy‚Äôs Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://sushrutghosal.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Shashank Rangarajan","Shreyas Mondikal Subramanya","Bhargav Bangalore Venkatesh Murthy"],"categories":[],"content":"","date":1703537568,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1703537568,"objectID":"41084a5e3fdaa3d5d05fbb2df91cffd5","permalink":"https://sushrutghosal.github.io/project/sightsync/","publishdate":"2023-12-25T12:52:48-08:00","relpermalink":"/project/sightsync/","section":"project","summary":"SightSync is a project that implements a Shazam-like functionality for video and audio clips. The system takes a database of videos, extracts frames and audio features, and stores them in Milvus vector database collections. It then allows users to search for a specific video or audio clip, finding the closest matches in both the visual and audio databases. This project was done towards the coursework CSCI576: Multimedia Systems Design taught by Prof. Parag Havaldar in Fall 2023, at USC ","tags":[],"title":"SightSync: Shazam for Video","type":"project"},{"authors":["Shashank Rangarajan","Sai Anuroop Kesanapalli","Avtaran Jain","Anukaran Jain"],"categories":[],"content":"","date":1682210095,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682210095,"objectID":"2fe88f6200b605c7bf03e4d2d0dc4421","permalink":"https://sushrutghosal.github.io/project/ff/","publishdate":"2023-04-22T17:34:55-07:00","relpermalink":"/project/ff/","section":"project","summary":"In this project, we implement the Forward-Forward algorithm porposed by Prof. Geoffrey Hinton and compare it with the traditional backpropagation algorithm. We also study the architecturual differences in FF for various datasets and propose popular architectures such as CNN, Self-Attention with Forward-Forward. Finally, we log system metrics for both the algorithms and analyze them. This project was done towards the coursework - CSCI566: Deep learning and its applications, taught by Prof. Jesse Thomason, Spring 2023, at USC","tags":[],"title":"Forward-Forward: Is it time to bid adieu to Backprop?","type":"project"},{"authors":["Shashank Rangarajan","Chia-Yu Tung","Rishabh Ghosh","Michael Guastalla","Edwin Wang"],"categories":[],"content":"","date":1682125116,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682125116,"objectID":"e6e59c84d3bc638cbc277ef405befdd7","permalink":"https://sushrutghosal.github.io/project/fakenews/","publishdate":"2023-04-21T17:58:36-07:00","relpermalink":"/project/fakenews/","section":"project","summary":"The proliferation of fake news and clickbait articles on social media platforms has become a major concern for individuals, organizations, and society as a whole. To combat this issue, there is a need for effective models that can accurately detect these types of content. In this paper, we present an in-depth analysis of existing models for detecting fake news and clickbait, and study how the two problems are correlated by studying the predictions from these models. Our models have been trained and tested on a variety of publicly available datasets our conclusions show that models that detect fake news are to a certain extent reliable to make predictions on clickbait data as well. This project was done towards the coursework CSCI544: Applied Natural Language Processing, taught by Prof. Mohammad Rostami, and Prof. Xuezhe Ma in Spring 2023, at USC. ","tags":[],"title":"Identifying Deceptive Content: A Study on Clickbait and Fake News Detection","type":"project"},{"authors":["Shashank Rangarajan","Edwin Wang"],"categories":[],"content":"","date":1681973232,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1681973232,"objectID":"1f30665af6bcb125efd914ccdeecc664","permalink":"https://sushrutghosal.github.io/project/gnn4fknws/","publishdate":"2023-04-19T23:47:12-07:00","relpermalink":"/project/gnn4fknws/","section":"project","summary":"Presented the paper by Nikhil Mehta et. al (ACL 2022), where they propose inference operators to continually improve the social media context (represented as Relational Graph Convolutional Neural Network), to aid fake news detection. This presentation was done towards the coursework CSCI544: Applied Natural Language Processing, taught by Prof. Mohammad Rostami, and Prof. Xuezhe Ma in Spring 2023, at USC. ","tags":[],"title":"[Paper Presentation] - Tackling Fake News Detection by Continually Improving Social Context Representations using Graph Neural Networks","type":"project"},{"authors":["Shashank Rangarajan"],"categories":[],"content":"","date":1680332252,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1680332252,"objectID":"c704531e741b03115d7e77000b2c7bcc","permalink":"https://sushrutghosal.github.io/project/nnasmf/","publishdate":"2023-03-31T23:57:32-07:00","relpermalink":"/project/nnasmf/","section":"project","summary":"Presented the paper by Levy \u0026 Goldberg (2014), where my role as a teacher I ensured my students understood the mathematical grounding of why neural embeddings can be thought of as implicit matrix factorization, and explained key insights from the paper. I finally concluded with an intriguing application of neural word embedding algorithm (skip-gram model) for recommendation systems. This presentation was done towards the coursework - CSCI566: Deep learning and its applications, taught by Prof. Jesse Thomasson, Spring 2023, at USC","tags":[],"title":"[Paper Role Playing] Neural Word Embeddings as Implicit Matrix Factorization","type":"project"},{"authors":["Shashank Rangarajan","Indrani Panchangam","Soha Niroumandi","Shriya Gumber"],"categories":[],"content":"","date":1669918893,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1669918893,"objectID":"758e93e78967738dea5e4922f91e411c","permalink":"https://sushrutghosal.github.io/project/storesales/","publishdate":"2022-12-01T11:21:33-07:00","relpermalink":"/project/storesales/","section":"project","summary":"Time series forecasting is the practice of using historical data to predict future values. It can be challenging, due to the complexity of time-series data and the difficulty of accurately modeling patterns and trends. In this project, we tackled the 'Store Sales- Time Series Forecasting' challenge on Kaggle, which involved forecasting sales at a grocery retailer in Ecuador. We trained multiple models, starting with linear regression as our baseline. After careful analysis, we improved upon the baseline and achieved an error score of 0.39525, a 13% improvement over our linear regression model. This project was done towards the coursework - CSCI567: Machine Learning, taught by Prof. Vatsal Sharan, Fall 2022, at USC","tags":[],"title":"Store Sales - Time Series Forecasting","type":"project"},{"authors":["Shashank Rangarajan"],"categories":[],"content":"","date":1661980693,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1661980693,"objectID":"dd11e82e9affe96185b445111d1ba4a8","permalink":"https://sushrutghosal.github.io/project/mntd/","publishdate":"2022-08-31T14:18:13-07:00","relpermalink":"/project/mntd/","section":"project","summary":"Implemented MNTD Networks proposed by Xu et al. (2020) for the trojan detection challenge hosted by USC's AI safety group, and managed to beat the baseline performance using ensembling technique. Consequently won the IInd place in the competition","tags":[],"title":"Trojan Detection: Meta Neural Networks for Trojan Detection (MNTD)","type":"project"},{"authors":["Shashank Rangarajan","Âê≥ÊÅ©ÈÅî"],"categories":["Demo","ÊïôÁ®ã"],"content":"import libr print(\u0026#39;hello\u0026#39;) Overview The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It‚Äôs a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more Get Started üëâ Create a new site üìö Personalize your site üí¨ Chat with the Wowchemy community or Hugo community üê¶ Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy üí° Request a feature or report a bug for Wowchemy ‚¨ÜÔ∏è Updating Wowchemy? View the Update Tutorial and Release Notes Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n‚ù§Ô∏è Click here to become a sponsor and help support Wowchemy‚Äôs future ‚ù§Ô∏è As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features ü¶Ñ‚ú®\nEcosystem Hugo Academic CLI: Automatically import publications from BibTeX Inspiration Check out the latest demo of what you‚Äôll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, ‰∏≠Êñá, and Portugu√™s Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files. Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://sushrutghosal.github.io/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome üëã We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","ÂºÄÊ∫ê"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":["Anil Kumar K M","Ajay Balaji","Shashank Rangarajan","Amogha Subramanya D A"],"categories":null,"content":"","date":1564444800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1564444800,"objectID":"6d1743c12bfe23fc724e34ca0205a325","permalink":"https://sushrutghosal.github.io/publication/ijrte/","publishdate":"2019-07-30T00:00:00Z","relpermalink":"/publication/ijrte/","section":"publication","summary":"In this data age peta-bytes of data is generated every day. One of the biggest challenge today is to convert this data into useful information, this is known as data mining. Important kinds of data include text-based data, audio-based data, image-based data, video-based data etc. An important challenge in mining useful information from text-based data source (text mining) is topic modeling which is to find out the topic the text is talking about. The solution to this problem finds application, in clustering files based on the topic, pre-processing method in information retrieval, ontology of medical record etc. A lot of research work has gone into this area of topic modeling, and many approaches have been formulated. Some of these approaches take into account the occurrence and frequency of occurrence of words/terms, these models come under the Bag Of Words(BOW) approach. Others take into account the underlying structure in the corpus of text used, Wikipedia category graph is an example of this approach. This paper, provides an unsupervised solution to the above problem by extracting keywords that represent the topic of the text document. In our approach, topic modeling is carried out with a hybrid model which makes use of WordNet and Wikipedia Corpus. Promising experimental results have been obtained for well- known news dataset (BBCNews) from our model. We present the experimental result for our proposed approach along with the results of others in the same domain and show that our approach provides better results.","tags":null,"title":"An Apriori Method for Topic Extraction from Text Files","type":"publication"},{"authors":null,"categories":null,"content":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you‚Äôll find some examples of the types of technical content that can be rendered with Wowchemy.\nExamples Code Wowchemy supports a Markdown extension for highlighting code syntax. You can customize the styles under the syntax_highlighter option in your config/_default/params.yaml file.\n```python\rimport pandas as pd\rdata = pd.read_csv(\u0026#34;data.csv\u0026#34;)\rdata.head()\r```\rrenders as\nimport pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() Mindmaps Wowchemy supports a Markdown extension for mindmaps.\nSimply insert a Markdown markmap code block and optionally set the height of the mindmap as shown in the example below.\nA simple mindmap defined as a Markdown list:\n```markmap {height=\u0026#34;200px\u0026#34;}\r- Hugo Modules\r- wowchemy\r- wowchemy-plugins-netlify\r- wowchemy-plugins-netlify-cms\r- wowchemy-plugins-reveal\r```\rrenders as\n- Hugo Modules\r- wowchemy\r- wowchemy-plugins-netlify\r- wowchemy-plugins-netlify-cms\r- wowchemy-plugins-reveal A more advanced mindmap with formatting, code blocks, and math:\n```markmap\r- Mindmaps\r- Links\r- [Wowchemy Docs](https://wowchemy.com/docs/)\r- [Discord Community](https://discord.gg/z8wNYzb)\r- [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes)\r- Features\r- Markdown formatting\r- **inline** ~~text~~ *styles*\r- multiline\rtext\r- `inline code`\r-\r```js\rconsole.log(\u0026#39;hello\u0026#39;);\rconsole.log(\u0026#39;code block\u0026#39;);\r```\r- Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$\r```\rrenders as\n- Mindmaps\r- Links\r- [Wowchemy Docs](https://wowchemy.com/docs/)\r- [Discord Community](https://discord.gg/z8wNYzb)\r- [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes)\r- Features\r- Markdown formatting\r- **inline** ~~text~~ *styles*\r- multiline\rtext\r- `inline code`\r-\r```js\rconsole.log(\u0026#39;hello\u0026#39;);\rconsole.log(\u0026#39;code block\u0026#39;);\r```\r- Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ Charts Wowchemy supports the popular Plotly format for interactive charts.\nSave your Plotly JSON in your page folder, for example line-chart.json, and then add the {{\u0026lt; chart data=\u0026#34;line-chart\u0026#34; \u0026gt;}} shortcode where you would like the chart to appear.\nDemo:\nYou might also find the Plotly JSON Editor useful.\nMath Wowchemy supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.yaml file.\nTo render inline or block math, wrap your LaTeX math with {{\u0026lt; math \u0026gt;}}$...${{\u0026lt; /math \u0026gt;}} or {{\u0026lt; math \u0026gt;}}$$...$${{\u0026lt; /math \u0026gt;}}, respectively. (We wrap the LaTeX math in the Wowchemy math shortcode to prevent Hugo rendering our math as Markdown. The math shortcode is new in v5.5-dev.)\nExample math block:\n{{\u0026lt; math \u0026gt;}} $$ \\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2} $$ {{\u0026lt; /math \u0026gt;}} renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$\rExample inline math {{\u0026lt; math \u0026gt;}}$\\nabla F(\\mathbf{x}_{n})${{\u0026lt; /math \u0026gt;}} renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the math linebreak (\\\\):\n{{\u0026lt; math \u0026gt;}} $$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$ {{\u0026lt; /math \u0026gt;}} renders as\n$$\rf(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\\r1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}\r$$\rDiagrams Wowchemy supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid\rgraph TD\rA[Hard] --\u0026gt;|Text| B(Round)\rB --\u0026gt; C{Decision}\rC --\u0026gt;|One| D[Result 1]\rC --\u0026gt;|Two| E[Result 2]\r```\rrenders as\ngraph TD\rA[Hard] --\u0026gt;|Text| B(Round)\rB --\u0026gt; C{Decision}\rC --\u0026gt;|One| D[Result 1]\rC --\u0026gt;|Two| E[Result 2] An example sequence diagram:\n```mermaid\rsequenceDiagram\rAlice-\u0026gt;\u0026gt;John: Hello John, how are you?\rloop Healthcheck\rJohn-\u0026gt;\u0026gt;John: Fight against hypochondria\rend\rNote right of John: Rational thoughts!\rJohn--\u0026gt;\u0026gt;Alice: Great!\rJohn-\u0026gt;\u0026gt;Bob: How about you?\rBob--\u0026gt;\u0026gt;John: Jolly good!\r```\rrenders as\nsequenceDiagram\rAlice-\u0026gt;\u0026gt;John: Hello John, how are you?\rloop Healthcheck\rJohn-\u0026gt;\u0026gt;John: Fight against hypochondria\rend\rNote right of John: Rational thoughts!\rJohn--\u0026gt;\u0026gt;Alice: Great!\rJohn-\u0026gt;\u0026gt;Bob: How about you?\rBob--\u0026gt;\u0026gt;John: Jolly good! An example Gantt diagram:\n```mermaid\rgantt\rsection Section\rCompleted :done, des1, 2014-01-06,2014-01-08\rActive :active, des2, 2014-01-07, 3d\rParallel 1 : des3, after des1, 1d\rParallel 2 : des4, after des1, 1d\rParallel 3 : des5, after des3, 1d\rParallel 4 : des6, after des4, 1d\r```\rrenders ‚Ä¶","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"https://sushrutghosal.github.io/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Markdown","type":"post"},{"authors":["Shashank Rangarajan"],"categories":[],"content":"from IPython.core.display import Image Image(\u0026#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png\u0026#39;) print(\u0026#34;Welcome to Academic!\u0026#34;) Welcome to Academic!\rInstall Python and JupyterLab Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata (front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post\u0026#39;s title date: 2019-09-01 # Put any other Academic metadata here... --- Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post‚Äôs folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=. Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"https://sushrutghosal.github.io/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let‚Äôs make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://sushrutghosal.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"}]